{
    "env": {
        "node": true,
        "es6": true,
        "es2021": true
    },
    "extends": [
        // By extending from a plugin config, we can get recommended rules without having to add them manually.
        "eslint:recommended",
        "plugin:react/recommended",
        "plugin:import/recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:react/jsx-runtime",
        "plugin:tailwindcss/recommended",
        // This disables the formatting rules in ESLint that Prettier is going to be responsible for handling.
        // Make sure it's always the last config, so it gets the chance to override other configs.
        "eslint-config-prettier",
        "plugin:react-hooks/recommended",
        "prettier",
        "plugin:prettier/recommended"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": { "project": ["./tsconfig.json"] },
    "plugins": ["@typescript-eslint", "react", "simple-import-sort", "react-refresh", "import", "prettier"],
    "settings": {
        "react": {
            // Tells eslint-plugin-react to automatically detect the version of React to use.
            "version": "detect"
        },
        // Tells eslint how to resolve imports
        "import/resolver": {
            "node": {
                "paths": ["src"],
                "extensions": [".js", ".jsx", ".ts", ".tsx"]
            },
            "typescript": {
                "project": "./tsconfig.json"
            }
        },
        "import/parsers": {
            "@typescript-eslint/parser": [".ts", ".tsx"]
        }
    },
    "rules": {
        // Add your own rules here to override ones from the extended configs.
        "quotes": ["error", "double", { "avoidEscape": false, "allowTemplateLiterals": true }],
        "no-duplicate-imports": "error",
        "eqeqeq": 0,
        "curly": 2,
        "no-multiple-empty-lines": ["error", { "max": 99999, "maxEOF": 0 }],
        "no-empty-pattern": "error",
        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": "warn",
        "import/named": "off",
        "simple-import-sort/imports": "error",
        "simple-import-sort/exports": "error",
        "tailwindcss/enforces-shorthand": ["error"],
        "react/prop-types": "off",
        "react-refresh/only-export-components": "warn",
        "react-hooks/rules-of-hooks": "error",
        "react-hooks/exhaustive-deps": "off"
    }
}
